# Hizalama


```bash
mkdir -p data/ref
mkdir -p data/fastq
mkdir -p logs
mkdir -p envs
```

Conda programını aktive edelim:

```bash
eval "$(/truba/home/$USER/miniconda3/bin/conda shell.bash hook)"
```

Çevre dosyamızı yükleyelim:

```bash
wget https://raw.githubusercontent.com/emrahkirdok/bioinformatics/refs/heads/main/09-scripts/01-environments/alignment.yaml -P envs/
```

Şimdi de çevremizi oluşturalım:

```bash
conda env create --file envs/alignment.yaml
```

Çevremizi aktive edelim:

```bash
conda activate alignment
```

Şimdi çalışmada kullanacağımız *Streptococcus sanguinis SK36* referans genomunu indirelim ve sıkıştırılmış dosyayı açalım:

```bash
wget https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/014/205/GCF_000014205.1_ASM1420v1/GCF_000014205.1_ASM1420v1_genomic.fna.gz -P data/ref
gunzip data/ref/GCF_000014205.1_ASM1420v1_genomic.fna.gz
```

Şimdi dosyaya bakalım:

```bash
less data/ref/GCF_000014205.1_ASM1420v1_genomic.fna.gz
```

Kaç tane dizi var?

```bash
grep ">" data/ref/GCF_000014205.1_ASM1420v1_genomic.fna.gz
```

Hatta genom anotasyon dosyasını da indirelim:

```bash
wget https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/014/205/GCF_000014205.1_ASM1420v1/GCF_000014205.1_ASM1420v1_genomic.gtf.gz -P data/ref
gunzip data/ref/GCF_000014205.1_ASM1420v1_genomic.gtf.gz
```

Genom anotasyon dosyası, bu canlının genomunda bulunan gen bilgilerini göstermektedir:

```bash
less data/ref/GCF_000014205.1_ASM1420v1_genomic.gtf
```

Bir tane protein arayalım, SsaB

```bash
grep SsaB data/ref/GCF_000014205.1_ASM1420v1_genomic.gtf
```

Bir sonraki adımda kullanacağımız DNA dizileme dosyaların indirelim:

```bash
wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR307/006/ERR3079326/ERR3079326_1.fastq.gz -P data/fastq/
wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR307/006/ERR3079326/ERR3079326_2.fastq.gz -P data/fastq/
``` 

## Kalite kontrol

Bir önceki derste kalite kontrol yapmıştık. Genel olarak bütün çalışmalarda bir kez kalite kontrol yapmak faydalı bir işlem olacaktır. Ancak bunu nasıl yapacağınıza siz karar vermelisiniz. Kullanacağımız betiği indirelim:

```bash
wget https://raw.githubusercontent.com/emrahkirdok/bioinformatics/refs/heads/main/09-scripts/02-sbatch-scripts/quality-control-and-cutadapt.sh -P scripts/
```

Bu işlemin sonucunda elde ettiğimiz çıktıları inceleyelim:

## Hizalama

Şimdi ilk olarak elimizdeki referans genomu indekslemeliyiz. Bunun için `bwa` programında bulunan `index` komutunu kullanacağız. Bakteri genomlarını hızlıca konsolda indeksleyebiliriz. Ancak ökaryotik genomlar için ayrı sbatch işleri hazırlamamız çok daha iyi olacaktır.


```bash
bwa index data/ref/GCF_000014205.1_ASM1420v1_genomic.fna
```

Oluşan dosyalara bakalım:

```bash
ls -ltrh data/ref
```

Bir sonraki adımda okumalarımızı referans genoma hizalamaya başlayacağız. İhtiyacımız olan dosyayı indirelim:

```bash
wget https://raw.githubusercontent.com/emrahkirdok/bioinformatics/refs/heads/main/09-scripts/02-sbatch-scripts/alignment.sh -P scripts
```

Şimdi ise `samtools flagstat` ile, elde ettiğimiz sam dosyalarını inceleyelim. Önce ham sam dosyası:

```bash
samtools flagstat results/alignment/ERR3079326.sam
```

Şimdi, hizalanmayan okumalardan arındırılmış bam dosyası

```bash
samtools flagstat results/alignment/ERR3079326.bam
```

Duplikasyonlardan arındırılmış bam dosyası:

```bash
samtools flagstat results/alignment/ERR3079326.sorted.rmdup.bam
```

Şimdi, elimizdeki dosyayı görselleştirelim:

```bash
samtools tview --reference data/ref/GCF_000014205.1_ASM1420v1_genomic.fna results/alignment/ERR3079326.sorted.rmdup.bam
````

Dersin başında bulduğumuz geni inceleylim mi?

```bash
samtools tview -p NC_009009.1:254673 --reference data/ref/GCF_000014205.1_ASM1420v1_genomic.fna results/alignment/ERR3079326.sorted.rmdup.bam
````

## SAM dosyaları

DNA hizalama işleminin ardıdan, ham hizalama verisi bu dosya içerinde tutulur. Genotip ve varyant çağırma işleminden önce, bu dosya filtre edilir. Bu filtrasyon aşağıdaki basamakları kapsamaktadır:

+ Referans genom ile hizalanmayan okumaların uzaklaştırılması
+ Kötü hizalama kalitesine sahip okumaların uzaklaştırılması (`-q 30`)

SAM dosyalarında, hizalama bilgisi, `flag` adı verilen bir değişken içinde saklanır. Bu `flag` bilgilerine [şu siteden](https://broadinstitute.github.io/picard/explain-flags.html) erişebilirsiniz.

Hizalama kalitesi (`-q`) aslında, phred okuma kalitesinin bir fonksiyonu. Genelde 30 okuma kalitesinden daha düşük olan diziler, hizalama dosyasından uzaklaştırlır.